$date
	Mon Feb 22 01:36:38 2016
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module paperprocessor $end
$var wire 2 ! register [1:0] $end
$var wire 2 " data [1:0] $end
$var wire 2 # count [1:0] $end
$var wire 2 $ a [1:0] $end
$var reg 1 % clk $end
$var reg 1 & reset $end
$var reg 1 ' status $end
$scope module counter0 $end
$var wire 1 % clk $end
$var wire 1 & rst $end
$var reg 2 ( count [1:0] $end
$upscope $end
$scope module ram0 $end
$var wire 2 ) out [1:0] $end
$var wire 2 * address [1:0] $end
$upscope $end
$scope module register0 $end
$var wire 1 % clk $end
$var wire 2 + count [1:0] $end
$var wire 1 ' status $end
$var reg 2 , register [1:0] $end
$upscope $end
$scope module setaddress0 $end
$var wire 2 - counter [1:0] $end
$var wire 1 ' status $end
$var wire 2 . w [1:0] $end
$var wire 2 / address [1:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 /
b0 .
b0 -
b0 ,
b0 +
b0 *
b0 )
b0 (
0'
1&
0%
b0 $
b0 #
b0 "
b0 !
$end
#1
b1 "
b1 )
b1 $
b1 *
b1 /
b10 .
b1 #
b1 (
b1 +
b1 -
1%
#2
0%
#3
b0 "
b0 )
b10 $
b10 *
b10 /
b1 .
b10 #
b10 (
b10 +
b10 -
b1 !
b1 ,
1%
#4
0%
#5
b0 $
b0 *
b0 /
b0 .
b0 #
b0 (
b0 +
b0 -
1%
#6
0%
#7
b1 "
b1 )
b1 $
b1 *
b1 /
b10 .
b1 #
b1 (
b1 +
b1 -
1%
#8
0%
#9
b0 "
b0 )
b10 $
b10 *
b10 /
b1 .
b10 #
b10 (
b10 +
b10 -
b10 !
b10 ,
1%
#10
0%
#11
b0 $
b0 *
b0 /
b0 .
b0 #
b0 (
b0 +
b0 -
1%
#12
0%
#13
b1 "
b1 )
b1 $
b1 *
b1 /
b10 .
b1 #
b1 (
b1 +
b1 -
1%
#14
0%
#15
b0 "
b0 )
b10 $
b10 *
b10 /
b1 .
b10 #
b10 (
b10 +
b10 -
b11 !
b11 ,
1%
#16
0%
#17
b0 $
b0 *
b0 /
b0 .
b0 #
b0 (
b0 +
b0 -
1%
#18
0%
#19
b1 "
b1 )
b1 $
b1 *
b1 /
b10 .
b1 #
b1 (
b1 +
b1 -
1%
#20
b0 !
b0 ,
b10 "
b10 )
b11 $
b11 *
b11 /
0%
1'
#21
b1 .
b10 #
b10 (
b10 +
b10 -
1%
#22
0%
